{"version":3,"sources":["logo.svg","components/QuestionCard/QuestionCard.js","App.js","index.js"],"names":["module","exports","QuestionCard","props","useState","showPage","setShowPage","className","onClick","questionString","IconButton","aria-label","size","fontSize","children","illnesses18","age","illnesses","visits","deaths18","hospitalizations","deaths","avertedIlVis","years","avertedHosDea","App","page","setPage","useEffect","window","scrollTo","Button","id","variant","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","value","offset","position","label","angle","verticalAlign","stackId","fill","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfb758f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst QuestionCard = (props) => {\n   const [showPage, setShowPage] = useState(false)\n   return (\n     <>\n     <button className=\"question_card\" onClick={() => setShowPage(!showPage)}>\n       <h2 className=\"question_text\">\n         {props.questionString}\n       </h2>\n     </button>\n     {\n       showPage &&\n       <div className=\"info_popup_bg\">\n         <div className=\"info_container\">\n           <header>\n             <h3>{props.questionString}</h3>\n             <IconButton aria-label=\"return\" size=\"small\" onClick={() => setShowPage(!showPage)}>\n               <CloseIcon fontSize=\"inherit\" />\n             </IconButton>\n           </header>\n \n           <div className=\"info_container_content\">\n             {props.children}\n           </div>\n \n         </div>\n       </div>\n     }\n     </>\n   )\n }\n\nexport default QuestionCard","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport styled from 'styled-components/macro'\n\nimport {Route, Link, Switch} from 'react-router-dom'\n\n// Components\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport { QuestionCard } from './components'\n\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label\n} from 'recharts';\n\nconst illnesses18 = [\n  {age: \"0-4\", illnesses: 3.6, visits: 2.4},\n  {age: \"5-17\", illnesses: 7.6, visits: 3.9},\n  {age: \"18-49\", illnesses: 11.9, visits: 4.4},\n  {age: \"50-64\", illnesses: 9.2, visits: 3.9},\n  {age: \"65\", illnesses: 3.1, visits: 1.7}\n];\n\nconst deaths18 = [\n  {age: \"0-4\", hospitalizations: 25328 , deaths: 266},\n  {age: \"5-17\", hospitalizations: 21012 , deaths: 211},\n  {age: \"18-49\", hospitalizations: 66869 , deaths: 2450},\n  {age: \"50-64\", hospitalizations: 97967 , deaths: 5676},\n  {age: \"65\", hospitalizations: 279384 , deaths: 25555 }\n\n]\n\nconst avertedIlVis = [\n  {years: \"2010-2011\", illnesses: 5.6, visits: 2.800000},\n  {years: \"2011-2012\", illnesses: 2.200000, visits: 1.100000},\n  {years: \"2012-2013\" , illnesses: 5.500000, visits: 2.700000},\n  {years: \"2013-2014\", illnesses: 7.500000, visits: 3.500000},\n  {years: \"2014-2015\", illnesses: 1.400000, visits: 7.00000},\n  {years: \"2015-2016\", illnesses: 5.300000, visits: 2.700000},\n  {years: \"2016-2017\", illnesses: 5.300000, visits: 2.700000},\n  {years: \"2017-2018\", illnesses: 6.200000, visits: 3.200000},\n  {years: \"2018-2019\", illnesses: 4.400000, visits: 2.300000}\n];\n\nconst avertedHosDea = [\n  {years: \"2010-2011\", hospitalizations: 80000 , deaths: 9800},\n  {years: \"2011-2012\", hospitalizations: 44000 , deaths: 4200},\n  {years: \"2012-2013\" , hospitalizations: 60000 , deaths: 3700},\n  {years: \"2013-2014\", hospitalizations: 100000 , deaths: 12000},\n  {years: \"2014-2015\", hospitalizations: 39000 , deaths: 3700 },\n  {years: \"2015-2016\", hospitalizations: 70000 , deaths: 5900 },\n  {years: \"2016-2017\", hospitalizations: 72000 , deaths: 5200 },\n  {years: \"2017-2018\", hospitalizations: 91000 , deaths: 5700 },\n  {years: \"2018-2019\", hospitalizations: 58000 , deaths: 3500 }\n];\n\n\n\n\nfunction App() {\n  const [page, setPage] = useState(0)\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [])\n\n  return (\n    <div className=\"main_page\">\n      {/* The first page the user sees */}\n      <div className=\"landing_container app_container\">\n        <header className=\"main_app_header\">\n          <h1 className=\"brand_text\">\n            Question.\n          </h1>\n        </header>\n\n        <div className=\"front_cover\" css={`\n          \n        `}>\n          <span className=\"front_cover_text\">\n            i have <span css={`text-decoration: underline;`}>flu vaccine</span> questions \n          </span>\n        </div>\n\n        <Button id=\"find_ans_button\" variant=\"contained\" onClick={() => setPage(1)}>\n          Find Answers\n        </Button>\n        \n      </div>\n\n      {/* This component will change depending on the information they want to see */}\n      <div className=\"questions_container app_container\" css={`\n        transform: ${page === 1 ? 'translateY(-100%)' : 'none'};\n      `}>\n        <header>\n          <h1 className=\"header_text\">Vaccines</h1>\n          <IconButton aria-label=\"return\" size=\"small\" onClick={() => setPage(0)}>\n            <ArrowUpwardIcon fontSize=\"inherit\" />\n          </IconButton>\n        </header>\n        <div css={`width: 100%; overflow-y: auto;`}>\n          <div className=\"questions_grid\">\n            <QuestionCard questionString=\"Am I at risk for getting the flu?\">\n            <section className=\"graphs\">\n                <BarChart\n                  width={400}\n                  height={300}\n                  data={illnesses18}\n                  margin={{\n                    top: 20, right: 30, left: 20, bottom: 15,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"age\">\n                    <Label value=\"Age Range\" offset={-3} position=\"insideBottom\" />\n                  </XAxis>\n                  <YAxis label={{ value: 'people (in millions)', angle: -90, position: 'left' }}/>\n                  <Tooltip />\n                  <Legend verticalAlign=\"top\"/>\n                  <Bar dataKey=\"illnesses\" stackId=\"a\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"visits\" stackId=\"a\" fill=\"#82ca9d\" />\n                </BarChart>\n\n                <BarChart\n                  width={400}\n                  height={300}\n                  data={deaths18}\n                  margin={{\n                    top: 20, right: 30, left: 20, bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"age\" >\n                    <Label value=\"Age Range\" offset={-3} position=\"insideBottom\" />\n                  </XAxis>\n                  <YAxis label={{ value: 'people', angle: -90, position: 'left' }}/>\n                  <Tooltip />\n                  <Legend verticalAlign=\"top\"/>\n                  <Bar dataKey=\"hospitalizations\" stackId=\"a\" fill=\"#e6a800\" />\n                  <Bar dataKey=\"deaths\" stackId=\"a\" fill=\"#fc4e4e\" />\n                </BarChart>\n              </section>\n              <section className=\"blurb\">\n                <p>\n                  Across all age groups, millions of Americans fall ill with the flu each year. \n                  Of these millions of people, tens of thousands will need hospitalization and many \n                  eventually die. While the elderly are most susceptible, millions of children younger \n                  than the age of 4 become very sick with the flu every year. *add immunocompromised, \n                  people who cannot get vaccine, and pregnant women * Vaccines are a critical way to \n                  protect these vulnerable members of our community as well as safeguard your own health.\n                </p>\n              </section>\n            </QuestionCard>\n\n            <QuestionCard questionString=\"What do I have to gain?\">\n            <section className=\"graphs\">\n                <BarChart\n                  width={400}\n                  height={300}\n                  data={avertedIlVis}\n                  margin={{\n                    top: 20, right: 30, left: 20, bottom: 15,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"years\">\n                    <Label value=\"Year Range\" offset={-3} position=\"insideBottom\" />\n                  </XAxis>\n                  <YAxis label={{ value: 'people (in millions)', angle: -90, position: 'left' }}/>\n                  <Tooltip />\n                  <Legend verticalAlign=\"top\"/>\n                  <Bar dataKey=\"illnesses\" stackId=\"a\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"visits\" stackId=\"a\" fill=\"#82ca9d\" />\n                </BarChart>\n\n                <BarChart\n                  width={400}\n                  height={300}\n                  data={avertedHosDea}\n                  margin={{\n                    top: 20, right: 30, left: 20, bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"years\" >\n                    <Label value=\"Year Range\" offset={-3} position=\"insideBottom\" />\n                  </XAxis>\n                  <YAxis label={{ value: 'people', angle: -90, position: 'left' }}/>\n                  <Tooltip />\n                  <Legend verticalAlign=\"top\"/>\n                  <Bar dataKey=\"hospitalizations\" stackId=\"a\" fill=\"#e6a800\" />\n                  <Bar dataKey=\"deaths\" stackId=\"a\" fill=\"#fc4e4e\" />\n                </BarChart>\n              </section>\n              \n              <section className=\"blurb\">\n                <p>\n                  Each year, the Center for Disease Control (CDC) estimates the positive impact of the flu \n                  vaccine. Since every year brings a different seasonal flu strain, the numbers vary from \n                  year to year. However, each vaccine has prevented several million infections and saved \n                  thousands of lives. Even though it may feel redundant to go back each year for a new vaccine,\n                  it is the best thing that you can do to reduce your chances of getting the virus. Remember, \n                  last years’ vaccine does not necessarily provide immunity to this years’ seasonal strains.\n                </p>\n              </section>\n            </QuestionCard>\n\n            <QuestionCard questionString=\"Will my child get autism if they get a flu vaccine?\">\n              <section className=\"blurb\">\n                <p>\n                  The National Vaccine Advisory Committee reviews vaccinations along with the FDA and other \n                  advisory commissions: each year the safety and efficacy of vaccinations are scrutinized and \n                  carefully monitored. While concerns have spread through the years linking thimerosal--a \n                  preservative in some vaccines--with autism, the data above shows the contrary. Even as thimerosal \n                  has been phased out of most vaccines, autism rates have continued to climb.\n                </p>\n              </section>\n            </QuestionCard>\n            <QuestionCard questionString=\"I already got a flu vaccine last year. Why do I have to get a new one?\">\n              <section className=\"blurb\">\n                <p>\n                  Even though it may feel redundant to go back each year for a new vaccine, it is the best thing that \n                  you can do to reduce your chances of getting the virus. Remember, last years’ vaccine does not necessarily \n                  provide immunity to this years’ seasonal strains. \n                </p>\n              </section>\n            </QuestionCard>\n            <QuestionCard questionString=\"Are there alternative options to getting an injection?\">\n              <section className=\"blurb\">\n                <p>\n                  Pending\n                </p>\n              </section>\n            </QuestionCard>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}